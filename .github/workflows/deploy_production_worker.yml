name: Deploy Production Worker Only
concurrency: worker

on:
  workflow_dispatch:

env:
  PROJECT_ID: ${{ secrets.GCE_PROJECT }}
  REDIS_HOST: ${{ secrets.REDIS_HOST }}
  REDIS_PASSWORD: ${{ secrets.REDIS_PASSWORD }}
  REDIS_PORT: 6379
  NEW_RELIC_LICENSE_KEY: ${{ secrets.NEW_RELIC_LICENSE_KEY }}
  KEY_PREFIX: "sitesearch:dev"
  ENV: "production"
  API_KEY: ${{ secrets.API_KEY }}
  NEW_RELIC_MONITOR_MODE: "on"
  SERVICE_ACCOUNT: ${{ secrets.SERVICE_ACCOUNT }}
  PAGERDUTY_KEY: ${{ secrets.PAGERDUTY_KEY }}

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - run: cp .env.example .env
      - run: sed -i 's/remove-if-redis-has-no-password/test/g' .env
      - run: docker-compose up test

  setup-build-publish:
    name: Setup, Build, and Publish
    runs-on: ubuntu-latest
    needs: test
    environment: uswest

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Authenticate
      uses: google-github-actions/auth@v1
      with:
        credentials_json: '${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}'

    - uses: google-github-actions/setup-gcloud@v1

    - uses: actions/setup-python@v4
      with:
        python-version: '3.8'

    - name: Install dependencies
      run: |
        python -m pip install -e .

    # Configure Docker to use the gcloud command-line tool as a credential
    # helper for authentication
    - run: |-
        gcloud auth configure-docker

    - name: Build and Push Images
      run: |-
        build_images

  deploy_worker:
    needs: setup-build-publish
    name: Deploy Worker
    runs-on: ubuntu-latest
    environment: uswest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Authenticate
        uses: google-github-actions/auth@v1
        with:
          credentials_json: '${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}'

      - uses: google-github-actions/setup-gcloud@v1

      - uses: actions/setup-python@v4
        with:
          python-version: '3.8'

      - name: Install dependencies
        run: |
          python -m pip install -e .

      # Configure Docker to use the gcloud command-line tool as a credential
      # helper for authentication
      - run: |-
          gcloud --quiet auth configure-docker

      - name: Deploy Worker Servers
        run: |-
          deploy_worker docsearch-worker-production-uswest
